#!/usr/bin/env python

import sys
from dataclasses import dataclass


@dataclass
class CommitMsg:
    commit_editmsg: str

    def convert(self) -> None:
        """Commitメッセージを変換する"""

        with open(self.commit_editmsg, "r+", encoding="utf-8") as f:
            commit_msg = f.read().strip()
            prefix, issue_num, msg = commit_msg.split("/", 2)
            if not issue_num.isdecimal():
                raise SyntaxError("Check issue number!")
            if msg.strip("") == "":
                raise SyntaxError("Let's leave some notes!")
            formatted_msg = self._convert_msg(prefix, issue_num, msg)
            f.seek(0)
            f.write(formatted_msg)
            f.truncate()

    def _convert_msg(self, prefix: str, issue_num: str, msg: str) -> str:
        """変換後のコミットメッセージを返す

        Args:
            prefix (str): コミットメッセージのprefix
            issue_num (str): 対応するissue番号
            msg (str): コミットメッセージ本体

        Returns:
            str: 変換後のコミットメッセージ

        Raises:
            対応するprefixではない場合は`SyntaxError`
        """
        match prefix:
            case "feat":
                emoji = ":sparkles:"
            case "add":
                emoji = ":tada:"
            case "delete":
                emoji = ":boom:"
            case "fix":
                emoji = ":bug:"
            case "wip":
                emoji = ":construction:"
            case _:
                raise SyntaxError("Syntax error in Commit message")
        return f"{emoji} #{issue_num} {msg}"


def main():
    commit_editmsg = sys.argv[1]
    CommitMsg(commit_editmsg).convert()


if __name__ == "__main__":
    main()

#!/usr/bin/env python

import sys
from dataclasses import dataclass


@dataclass
class CommitMsgConverter:
    commit_editmsg: str

    def convert(self) -> None:
        """Commitメッセージを変換する"""

        with open(self.commit_editmsg, "r+", encoding="utf-8") as f:
            commit_msg = f.read().strip()
            prefix, msg = commit_msg.split("/", 1)
            formatted_msg = self._get_msg(prefix, msg)
            f.seek(0)
            f.write(formatted_msg)
            f.truncate()

    def _get_msg(self, prefix: str, msg: str) -> str:
        """変換後のコミットメッセージを返す

        Args:
            prefix (str): コミットメッセージのprefix
            msg (str): コミットメッセージ

        Returns:
            str: 変換後のコミットメッセージ

        Raises:
            対応するprefixではない場合は`SyntaxError`
        """
        match prefix:
            case "update":
                return f"[:sparkles:update:sparkles:] {msg}"
            case "add":
                return f"[:tada:add:tada:] {msg}"
            case "remove":
                return f"[:boom:remove:boom:] {msg}"
            case "fix":
                return f"[:bug:fix:bug:] {msg}"
            case _:
                raise SyntaxError("Commitメッセージに構文の誤りがあります")


def main():
    commit_editmsg = sys.argv[1]
    CommitMsgConverter(commit_editmsg).convert()


if __name__ == "__main__":
    main()
